 References

https://www.drgoulu.com/2008/01/13/eternity-ii/#.Y7Q9iHnMJH0

https://fr.wikipedia.org/wiki/Eternity_(jeu)




# AvailablePieces = self.lookForAvailablePieces(caseID)
            # (x, y) = self.getCoordinates(caseID)
            # constraints = self.currentBoard.getConstraints(x, y)
            
            # if len( AvailablePieces) == 0:
            #     piece = self.remainingPieces.pop()
            #     # print(piece, constraints, caseID)
            #     if ("X" not in constraints):
            #         for _ in range(100):
            #             if ("X" in piece):
            #                 self.remainingPieces.append(piece)
            #                 random.shuffle(self.remainingPieces)
            #                 piece = self.remainingPieces.pop()
            #     else:
            #         if ("X" not in piece):
            #             print(self.remainingPieces)
            #             print(AvailablePieces)
            #             break
                    # for _ in range(100):
                    #     if ("X" not in piece):
                    #         self.remainingPieces.append(piece)
                    #         random.shuffle(self.remainingPieces)
                    #         piece = self.remainingPieces.pop()
                    # if "XX" in constraints:
                    #     piece = self.getPieceForCorners(constraints)
                    #     if (piece == None):
                    #         print("No piece for: " + constraints)
                    #         piece = self.remainingPieces.pop()
                                
            #     self.currentBoard.putPiece(caseID, piece, 0, 1)
            #     self.numMoves += 1
            #     caseID += 1   
            # else:
            #     #print(AvailablePieces, "for: " + constraints)
            #     piece = AvailablePieces.pop()
                
            #     if ("X" in constraints):
            #         if ("X" not in piece[0]):
            #             piece = AvailablePieces.pop()
            #     else:
            #         if ("X" in piece[0]):
            #             piece = AvailablePieces.pop()
                
            #     #print(constraints + " " + piece[0])
                
            #     self.currentBoard.putPiece(caseID, piece[0], piece[1], 0)
            #     caseID += 1
            #     self.remainingPieces.remove(piece[0])
            #     self.numMoves +=1